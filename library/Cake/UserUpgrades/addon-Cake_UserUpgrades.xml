<?xml version="1.0" encoding="utf-8"?>
<addon addon_id="Cake_UserUpgrades" title="Cake\UserUpgrades" version_string="1.0.0 Alpha 2" version_id="1000031" url="https://forumcake.com/" install_callback_class="Cake\UserUpgrades\Install_Controller" install_callback_method="install" uninstall_callback_class="" uninstall_callback_method="">
  <admin_navigation>
    <navigation navigation_id="ipnRules" parent_navigation_id="userUpgrades" display_order="2100" link="ipn-rules" admin_permission_id="userUpgrade" debug_only="0" hide_no_children="0" module_name_cake="PayPalIpnRules"/>
    <navigation navigation_id="userUpgradeCategories" parent_navigation_id="userUpgrades" display_order="40" link="user-upgrade-categories" admin_permission_id="userUpgrade" debug_only="0" hide_no_children="0" module_name_cake="Categories"/>
  </admin_navigation>
  <admin_permissions/>
  <admin_style_properties/>
  <admin_templates>
    <template title="cake_paypal_ipn_rule_delete"><![CDATA[<xen:title>{xen:phrase cake_confirm_deletion_of_paypal_ipn_rule}: {$payPalIpnRule.title}</xen:title>

<xen:h1>{xen:phrase cake_confirm_deletion_of_paypal_ipn_rule}</xen:h1>

<xen:navigation>
	<xen:breadcrumb href="{xen:adminlink 'ipn-rules/edit', $payPalIpnRule}">{$payPalIpnRule.title}</xen:breadcrumb>
</xen:navigation>

<xen:require css="delete_confirmation.css" />

<xen:form action="{xen:adminlink 'ipn-rules/delete', $payPalIpnRule}" class="deleteConfirmForm formOverlay">
	<p>{xen:phrase cake_please_confirm_want_to_delete_paypal_ipn_rule}:</p>
	<strong><a href="{xen:adminlink 'ipn-rules/edit', $payPalIpnRule}">{$payPalIpnRule.title}</a></strong>

	<xen:submitunit save="{xen:phrase cake_delete_paypal_ipn_rule}" />

	<input type="hidden" name="_xfConfirm" value="1" />
</xen:form>]]></template>
    <template title="cake_paypal_ipn_rule_edit"><![CDATA[<xen:title>{xen:if '{$payPalIpnRule.paypal_ipn_rule_id}', '{xen:phrase cake_edit_paypal_ipn_rule}: {$payPalIpnRule.title}', '{xen:phrase cake_create_new_paypal_ipn_rule}'}</xen:title>

<xen:h1>{xen:if '{$payPalIpnRule.paypal_ipn_rule_id}', '{xen:phrase cake_edit_paypal_ipn_rule}: <em>{$payPalIpnRule.title}</em>', '{xen:phrase cake_create_new_paypal_ipn_rule}'}</xen:h1>

<xen:if is="{$payPalIpnRule.paypal_ipn_rule_id}">
	<xen:navigation>
		<xen:breadcrumb href="{xen:adminlink 'ipn-rules'}#{xen:helper listitemid, $payPalIpnRule.paypal_ipn_rule_id}">{$payPalIpnRule.title}</xen:breadcrumb>
	</xen:navigation>
</xen:if>

<xen:form action="{xen:adminlink 'ipn-rules/save', $payPalIpnRule}" class="AutoValidator" data-redirect="on">
	<xen:textboxunit label="{xen:phrase title}:" name="title" value="{$payPalIpnRule.title}" data-liveTitleTemplate="{xen:if {$payPalIpnRule.paypal_ipn_rule_id},
		'{xen:phrase cake_edit_paypal_ipn_rule}: <em>%s</em>',
		'{xen:phrase cake_create_new_paypal_ipn_rule}: <em>%s</em>'}" />

	<xen:textboxunit label="{xen:phrase cake_ipn_item_name}:" explain="{xen:phrase cake_ipn_item_name_explain}" name="item_name" value="{$payPalIpnRule.item_name}" />

	<xen:selectunit label="{xen:phrase cake_user_upgrade}:" name="user_upgrade_id" value="{$payPalIpnRule.user_upgrade_id}">
		<xen:foreach loop="$userUpgrades" key="$userUpgradeId" value="$userUpgrade">
			<xen:option value="{$userUpgradeId}">{$userUpgrade.title} ({$userUpgrade.costPhrase})</xen:option>
		</xen:foreach>
	</xen:selectunit>
	
	<xen:checkboxunit label="">
		<xen:option label="{xen:phrase cake_ipn_match_username_to_custom_value}" hint="{xen:phrase cake_if_unchecked_payer_email_will_be_matched_instead_userupgrades}" name="match_username" selected="{$payPalIpnRule.match_username}" />
		<xen:option label="{xen:phrase cake_ipn_match_amount}" hint="{xen:phrase cake_if_checked_amount_currency_must_agree_user_upgrade_userupgrades}" name="match_amount" selected="{$payPalIpnRule.match_amount}" />
	</xen:checkboxunit>

	<xen:submitunit>
		<input type="submit" name="saveexit" value="{xen:phrase save_and_exit}" accesskey="e" class="button primary" id="saveExitButton" />
		<input type="submit" name="reload" value="{xen:phrase save_changes}" accesskey="s" class="button" id="saveReloadButton" data-ajaxvalue="{xen:phrase save_all_changes}" />
		<xen:if is="{$payPalIpnRule.paypal_ipn_rule_id}">
			<input type="button" value="{xen:phrase cake_delete_paypal_ipn_rule}..." accesskey="d" class="button OverlayTrigger"
				data-href="{xen:adminlink ipn-rules/delete, $payPalIpnRule}" />
		</xen:if>
	</xen:submitunit>
</xen:form>]]></template>
    <template title="cake_paypal_ipn_rule_list"><![CDATA[<xen:title>{xen:phrase cake_paypal_ipn_rules}</xen:title>

<xen:h1>{xen:phrase cake_paypal_ipn_rules}</xen:h1>

<xen:description>{xen:phrase cake_rules_for_the_alternative_callback_ipn_processor}</xen:description>

<xen:topctrl>
    <a href="{xen:adminlink 'ipn-rules/add'}" class="button">+ {xen:phrase cake_create_new_paypal_ipn_rule}</a>
</xen:topctrl>

<xen:require css="filter_list.css" />
<xen:require js="js/xenforo/filter_list.js" />

<xen:form action="{xen:adminlink 'ipn-rules/toggle'}" class="section AutoValidator">

    <xen:if is="{$payPalIpnRules}">
        <h2 class="subHeading">
            <xen:include template="filter_list_controls" />
            {xen:phrase cake_paypal_ipn_rules}
        </h2>

        <ol class="FilterList">
            <xen:foreach loop="$payPalIpnRules" key="$paypalIpnRuleId" value="$payPalIpnRule">
                <xen:listitem id="{$paypalIpnRuleId}"
                    label="{$payPalIpnRule.title}"
                    snippet="{$payPalIpnRule.upgrade_title}"
                    href="{xen:adminlink 'ipn-rules/edit', $payPalIpnRule}"
                    delete="{xen:adminlink 'ipn-rules/delete', $payPalIpnRule}"
                    deletehint="{xen:phrase delete}">
                </xen:listitem>
            </xen:foreach>
        </ol>

        <p class="sectionFooter">{xen:phrase showing_x_of_y_items, 'count=<span class="FilterListCount">{xen:count $payPalIpnRules}</span>', 'total={xen:count $payPalIpnRules}'}</p>

    <xen:else />
        <div class="noResults">{xen:phrase cake_there_are_no_paypal_ipn_rules}</div>
    </xen:if>

</xen:form>

<xen:form action="{xen:adminlink 'options/save'}" class="AutoValidator OptIn">
	<h3 class="subHeading">{xen:phrase payment_gateway_setup}</h3>

	<xen:foreach loop="$renderedOptions" value="$renderedOption">
		{xen:raw $renderedOption}
	</xen:foreach>

	<xen:submitunit save="{xen:phrase save}" />
</xen:form>]]></template>
    <template title="cake_user_upgrade_category_delete"><![CDATA[<xen:title>{xen:phrase cake_confirm_deletion_of_user_upgrade_category}: {$category.title}</xen:title>

<xen:h1>{xen:phrase cake_confirm_deletion_of_user_upgrade_category}</xen:h1>

<xen:navigation>
    <xen:breadcrumb href="{xen:adminlink 'user-upgrade-categories/edit', $category}">{$category.title}</xen:breadcrumb>
</xen:navigation>

<xen:require css="delete_confirmation.css" />

<xen:form action="{xen:adminlink 'user-upgrade-categories/delete', $category}" class="deleteConfirmForm formOverlay">

    <p>{xen:phrase cake_please_confirm_want_to_delete_user_upgrade_category}:</p>
    <strong><a href="{xen:adminlink 'user-upgrade-categories/edit', $category}">{$category.title}</a></strong>

    <xen:submitunit save="{xen:phrase cake_delete_user_upgrade_category}" />

    <input type="hidden" name="_xfConfirm" value="1" />
</xen:form>]]></template>
    <template title="cake_user_upgrade_category_edit"><![CDATA[<xen:title>{xen:if '{$category.category_id}', '{xen:phrase cake_edit_user_upgrade_category}: {$category.title}', '{xen:phrase cake_create_new_user_upgrade_category}'}</xen:title>

<xen:h1>{xen:if '{$category.category_id}', '{xen:phrase cake_edit_user_upgrade_category}: <em>{$category.title}</em>', '{xen:phrase cake_create_new_user_upgrade_category}'}</xen:h1>

<xen:if is="{$category.category_id}">
    <xen:navigation>
        <xen:breadcrumb href="{xen:adminlink 'user-upgrade-categories'}#{xen:helper listitemid, $category.user_upgrade_category_id}">{$category.title}</xen:breadcrumb>
    </xen:navigation>
</xen:if>

<xen:form action="{xen:adminlink 'user-upgrade-categories/save', $category}"
    class="AutoValidator"
    data-fieldValidatorUrl="{xen:adminlink '/validate-field', $category}"
    data-redirect="on">

<fieldset>
	<xen:textboxunit label="{xen:phrase title}:" name="title" value="{$category.title}" data-liveTitleTemplate="{xen:if {$category.category_id},
	        '{xen:phrase cake_edit_user_upgrade_category}: <em>%s</em>',
	        '{xen:phrase cake_create_new_user_upgrade_category}: <em>%s</em>'}" />
    
    	<xen:textboxunit label="{xen:phrase description}:" hint="{xen:phrase you_may_use_html}" name="description" value="{$category.description}" rows="2" inputclass="Elastic" />

	<xen:selectunit label="{xen:phrase cake_parent_user_upgrade_category}:" name="parent_category_id" value="{$category.parent_category_id}" explain="{xen:phrase cake_must_select_parent_user_upgrade_category_to_add_upgrades}">
		<xen:option />   
		<xen:options source="{$categories}" />
	</xen:selectunit>
    
	<xen:textboxunit name="display_order" value="{$category.display_order}" label="{xen:phrase display_order}:">
		<xen:explain>{xen:phrase cake_position_of_this_item_relative_to_other_user_upgrade_categories}</xen:explain>
	</xen:textboxunit>
	
    	<xen:checkboxunit label="">
    		<xen:option label="{xen:phrase cake_show_user_upgrade_descriptions}" name="show_descriptions" value="1" selected="{$category.show_descriptions}" />
    	</xen:checkboxunit>
</fieldset>

    <xen:submitunit>
        <input type="submit" value="{xen:phrase save_changes}" accesskey="s" class="button primary" />
        <xen:if is="{$category.category_id}">
            <input type="button" value="{xen:phrase cake_delete_user_upgrade_category}..." accesskey="d" class="button OverlayTrigger"
                data-href="{xen:adminlink user-upgrade-categories/delete, $category}" />
        </xen:if>
    </xen:submitunit>
</xen:form>]]></template>
    <template title="cake_user_upgrade_category_list"><![CDATA[<xen:title>{xen:phrase cake_user_upgrade_categories}</xen:title>

<xen:h1>{xen:phrase cake_user_upgrade_categories}</xen:h1>

<xen:topctrl>
	<a href="{xen:adminlink 'user-upgrade-categories/add'}" class="button">+ {xen:phrase cake_create_new_user_upgrade_category}</a>
</xen:topctrl>

<xen:require css="filter_list.css" />
<xen:require js="js/xenforo/filter_list.js" />

<xen:if is="{$categories}">
	<h2 class="subHeading">
		<xen:include template="filter_list_controls" />
		{xen:phrase cake_user_upgrade_categories}
	</h2>

	<ol class="FilterList">
		<xen:foreach loop="$categories" key="$categoryId" value="$category">
			<h3 class="textHeading" id="{xen:helper listitemid, '{$categoryId}'}">
				{$category.title}
				<a href="{xen:adminlink 'user-upgrade-categories/edit', $category}" class="edit controls OverlayTrigger" title="{xen:phrase edit}..."><span>{xen:phrase edit}</span></a>
			</h3>
			<xen:if is="{$category.categories}">
				<xen:foreach loop="$category.categories" key="$childCategoryId" value="$childCategory">
					<xen:listitem id="{$childCategoryId}"
						label="{$childCategory.title}"
						href="{xen:adminlink 'user-upgrade-categories/edit', $childCategory}"
						delete="{xen:adminlink 'user-upgrade-categories/delete', $childCategory}"
						deletehint="{xen:phrase delete}">
					</xen:listitem>
				</xen:foreach>
			</xen:if>
		</xen:foreach>
	</ol>

	<p class="sectionFooter">{xen:phrase showing_x_of_y_items, 'count=<span class="FilterListCount">{xen:count $categories}</span>', 'total={xen:count $categories}'}</p>

<xen:else />
	<div class="noResults">{xen:phrase cake_there_are_no_user_upgrade_categories}</div>
</xen:if>]]></template>
  </admin_templates>
  <admin_template_modifications>
    <modification template="user_upgrade_edit" modification_key="cake_userUpgrades_categories_userUpgradeEdit" description="" execution_order="10" enabled="1" action="preg_replace">
      <find><![CDATA[#<xen:submitunit#]]></find>
      <replace><![CDATA[<xen:if is="{$categories}">
	<fieldset>
		<xen:selectunit label="{xen:phrase cake_user_upgrade_category}:" name="user_upgrade_category_id_cake" value="{$upgrade.user_upgrade_category_id_cake}">
		<xen:option />
		<xen:foreach loop="$categories" value="$parentCategory">
			<xen:optgroup label="{$parentCategory.title}">
				<xen:foreach loop="$parentCategory.categories" key="$categoryId" value="$category">
					<xen:option value="{$categoryId}" label="{$category.title}" />
				</xen:foreach>
			</xen:optgroup>
		</xen:foreach>
		</xen:selectunit>
	</fieldset>
</xen:if>
${0}]]></replace>
    </modification>
    <modification template="user_upgrade_edit" modification_key="cake_userUpgrades_multiplePurchase_userUpgradeEdit" description="" execution_order="10" enabled="1" action="preg_replace">
      <find><![CDATA[#<xen:checkboxunit label="">\s*<xen:option label="{xen:phrase can_be_purchased}"#]]></find>
      <replace><![CDATA[<xen:checkboxunit label="">
	<xen:option label="{xen:phrase cake_allow_users_to_make_multiple_purchases}" name="multiple_purchase_cake" selected="{$upgrade.multiple_purchase_cake}" />
</xen:checkboxunit>
${0}]]></replace>
    </modification>
    <modification template="user_upgrade_edit" modification_key="cake_userUpgrades_requiredUserGroups_userUpgradeEd" description="" execution_order="10" enabled="1" action="preg_replace">
      <find><![CDATA[#<xen:if is="{\$disabledUpgradeOptions}">#]]></find>
      <replace><![CDATA[<xen:checkboxunit label="{xen:phrase cake_required_user_groups}:" name="required_group_ids_cake" explain="{xen:phrase cake_user_must_be_member_at_least_one_group_in_purchase_user_upgrade}" class="checkboxColumns">
	<xen:options source="$requiredUserGroupOptions" />
</xen:checkboxunit>
${0}]]></replace>
    </modification>
  </admin_template_modifications>
  <code_events/>
  <code_event_listeners>
    <listener event_id="load_class_controller" execute_order="10" callback_class="Cake\UserUpgrades\Categories\Proxy" callback_method="loadClass" active="1" hint="XenForo_ControllerPublic_Account" description=""/>
    <listener event_id="load_class_controller" execute_order="10" callback_class="Cake\UserUpgrades\Categories\Proxy" callback_method="loadClass" active="1" hint="XenForo_ControllerAdmin_UserUpgrade" description=""/>
    <listener event_id="load_class_controller" execute_order="10" callback_class="Cake\UserUpgrades\MultiplePurchase\Proxy" callback_method="loadClass" active="1" hint="XenForo_ControllerAdmin_UserUpgrade" description=""/>
    <listener event_id="load_class_controller" execute_order="10" callback_class="Cake\UserUpgrades\RequiredUserGroups\Proxy" callback_method="loadClass" active="1" hint="XenForo_ControllerAdmin_UserUpgrade" description=""/>
    <listener event_id="load_class_datawriter" execute_order="10" callback_class="Cake\UserUpgrades\Categories\Proxy" callback_method="loadClass" active="1" hint="XenForo_DataWriter_UserUpgrade" description=""/>
    <listener event_id="load_class_datawriter" execute_order="10" callback_class="Cake\UserUpgrades\MultiplePurchase\Proxy" callback_method="loadClass" active="1" hint="XenForo_DataWriter_UserUpgrade" description=""/>
    <listener event_id="load_class_datawriter" execute_order="10" callback_class="Cake\UserUpgrades\RequiredUserGroups\Proxy" callback_method="loadClass" active="1" hint="XenForo_DataWriter_UserUpgrade" description=""/>
    <listener event_id="load_class_model" execute_order="5" callback_class="Cake\UserUpgrades\MultiplePurchase\Proxy" callback_method="loadClass" active="1" hint="XenForo_Model_UserUpgrade" description=""/>
    <listener event_id="load_class_model" execute_order="10" callback_class="Cake\UserUpgrades\SalesTax\Proxy" callback_method="loadClass" active="1" hint="XenForo_Model_UserUpgrade" description=""/>
    <listener event_id="load_class_model" execute_order="10" callback_class="Cake\UserUpgrades\RequiredUserGroups\Proxy" callback_method="loadClass" active="1" hint="XenForo_Model_UserUpgrade" description=""/>
  </code_event_listeners>
  <cron/>
  <email_templates/>
  <email_template_modifications/>
  <optiongroups>
    <option option_id="cake_userUpgrades_modules" edit_format="callback" data_type="array" can_backup="1">
      <default_value>a:5:{s:10:"Categories";i:1;s:16:"MultiplePurchase";i:1;s:14:"PayPalIpnRules";i:1;s:18:"RequiredUserGroups";i:1;s:8:"SalesTax";i:1;}</default_value>
      <edit_format_params>Cake\Option_Explain::render</edit_format_params>
      <sub_options>*</sub_options>
      <relation group_id="cake" display_order="1"/>
    </option>
    <option option_id="cake_userUpgrades_salesTax_allowAutomatic" edit_format="onoff" data_type="boolean" can_backup="1">
      <default_value>1</default_value>
      <edit_format_params></edit_format_params>
      <sub_options></sub_options>
      <relation group_id="cake" display_order="100"/>
    </option>
  </optiongroups>
  <permissions>
    <permission_groups/>
    <permissions/>
    <interface_groups/>
  </permissions>
  <phrases>
    <phrase title="admin_navigation_ipnRules" version_id="1000030" version_string="1.0.0 Alpha 1"><![CDATA[PayPal IPN Rules]]></phrase>
    <phrase title="admin_navigation_userUpgradeCategories" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[User Upgrade Categories]]></phrase>
    <phrase title="cake_allow_users_to_make_multiple_purchases" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Allow users to make multiple purchases]]></phrase>
    <phrase title="cake_confirm_deletion_of_paypal_ipn_rule" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Confirm Deletion of PayPal IPN Rule]]></phrase>
    <phrase title="cake_confirm_deletion_of_user_upgrade_category" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Confirm Deletion of User Upgrade Category]]></phrase>
    <phrase title="cake_create_new_paypal_ipn_rule" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Create New PayPal IPN Rule]]></phrase>
    <phrase title="cake_create_new_user_upgrade_category" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Create New User Upgrade Category]]></phrase>
    <phrase title="cake_delete_paypal_ipn_rule" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Delete PayPal IPN Rule]]></phrase>
    <phrase title="cake_delete_user_upgrade_category" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Delete Category]]></phrase>
    <phrase title="cake_edit_paypal_ipn_rule" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Edit PayPal IPN Rule]]></phrase>
    <phrase title="cake_edit_user_upgrade_category" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Edit User Upgrade Category]]></phrase>
    <phrase title="cake_if_checked_amount_currency_must_agree_user_upgrade" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[If checked, the amount and currency paid must always agree with the amount and currency specified in the user upgrade.]]></phrase>
    <phrase title="cake_if_checked_amount_currency_must_agree_user_upgrade_userupgrades" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[If checked, the amount and currency must agree with the amount and currency of the matched user upgrade.]]></phrase>
    <phrase title="cake_if_unchecked_payer_email_will_be_matched_instead" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[If unchecked, the payer's email address will be matched instead.]]></phrase>
    <phrase title="cake_if_unchecked_payer_email_will_be_matched_instead_userupgrades" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[If unchecked, the payer's email address will be matched instead.]]></phrase>
    <phrase title="cake_ipn_item_name" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Item Name]]></phrase>
    <phrase title="cake_ipn_item_name_explain" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[This is the name of the purchased item that is expected in the Instant Payment Notification. Leave blank if item name is not required to be checked for this rule.]]></phrase>
    <phrase title="cake_ipn_match_amount" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Match amount]]></phrase>
    <phrase title="cake_ipn_match_username_to_custom_value" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Match username to custom value]]></phrase>
    <phrase title="cake_must_select_parent_user_upgrade_category_to_add_upgrades" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[You must select a parent user upgrade category to be able to add user upgrades to thi s category.]]></phrase>
    <phrase title="cake_other_account_upgrades" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Other Account Upgrades]]></phrase>
    <phrase title="cake_parent_user_upgrade_category" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Parent User Upgrade Category]]></phrase>
    <phrase title="cake_paypal_ipn_rules" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[PayPal IPN Rules]]></phrase>
    <phrase title="cake_paypal_ipn_rule_not_found" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[The PayPal IPN Rule could not be found.]]></phrase>
    <phrase title="cake_please_confirm_want_to_delete_paypal_ipn_rule" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Please confirm you want to delete the following PayPal IPN Rule]]></phrase>
    <phrase title="cake_please_confirm_want_to_delete_user_upgrade_category" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Please confirm that you want to delete the user upgrade category]]></phrase>
    <phrase title="cake_position_of_this_item_relative_to_other_user_upgrade_categories" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Position of this item relative to other user upgrade categories]]></phrase>
    <phrase title="cake_rules_for_the_alternative_callback_ipn_processor" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Rules for the payment_gateway.php PayPal Instant Payment Notification processor.]]></phrase>
    <phrase title="cake_show_user_upgrade_descriptions" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Show user upgrade descriptions]]></phrase>
    <phrase title="cake_there_are_no_paypal_ipn_rules" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[There are no PayPal IPN Rules.]]></phrase>
    <phrase title="cake_there_are_no_user_upgrade_categories" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[There areno user upgrade categories.]]></phrase>
    <phrase title="cake_userUpgrades" version_id="1000030" version_string="1.0.0 Alpha 1"><![CDATA[User Upgrades]]></phrase>
    <phrase title="cake_userUpgrades_categories" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Categories]]></phrase>
    <phrase title="cake_userUpgrades_categories_desc" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Adds the ability to categorize user upgrades.]]></phrase>
    <phrase title="cake_userUpgrades_multiplePurchase" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Multiple Purchase]]></phrase>
    <phrase title="cake_userUpgrades_multiplePurchase_desc" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Allows user upgrades to be purchased more than once.]]></phrase>
    <phrase title="cake_userUpgrades_payPalIpnRules" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[PayPal Instant Payment Notification Rules]]></phrase>
    <phrase title="cake_userUpgrades_payPalIpnRules_desc" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Create rules for processing non-XenForo PayPal payments.]]></phrase>
    <phrase title="cake_userUpgrades_requiredUserGroups" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Required User Groups]]></phrase>
    <phrase title="cake_userUpgrades_requiredUserGroups_desc" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Require users to be part of specified user groups in order to purchase certain upgrades.]]></phrase>
    <phrase title="cake_userUpgrades_salesTax" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Sales Tax/VAT]]></phrase>
    <phrase title="cake_userUpgrades_salesTax_desc" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Options for processing VAT/sales tax.]]></phrase>
    <phrase title="cake_user_must_be_member_at_least_one_group_in_purchase_user_upgrade" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[A user must be a member of at least one of the above user groups in order to purchase this user upgrade. If no user groups are selected, this option is disabled.]]></phrase>
    <phrase title="cake_user_upgrade" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[User Upgrade]]></phrase>
    <phrase title="cake_user_upgrade_categories" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[User Upgrade Categories]]></phrase>
    <phrase title="cake_user_upgrade_category" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[User Upgrade Category]]></phrase>
    <phrase title="option_cake_userUpgrades_modules" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Enabled Modules]]></phrase>
    <phrase title="option_cake_userUpgrades_modules_explain" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[This option can't be edited manually. It is edited only via the <a href="admin.php?add-ons/Cake_UserUpgrades/modules">Modules</a> page.]]></phrase>
    <phrase title="option_cake_userUpgrades_salesTax_allowAutomatic" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[Allow automatic calculation of sales tax/VAT]]></phrase>
    <phrase title="option_cake_userUpgrades_salesTax_allowAutomatic_explain" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[With this option enabled, you will be able to set your sales tax/VAT rates in PayPal. See <a href="https://developer.paypal.com/docs/classic/paypal-payments-standard/integration-guide/ProfileAndTools/#id08A9ED00LTU">this guide</a>. For compliance with the 2015 EU VAT regulations, check out this list of <a href="http://www.vatlive.com/vat-rates/european-vat-rates/eu-vat-rates/">European Union VAT rates</a>.]]></phrase>
  </phrases>
  <route_prefixes>
    <route_type type="admin">
      <prefix original_prefix="ipn-rules" class="Cake\UserUpgrades\PayPalIpnRules\Route_PrefixAdmin_IpnRules" build_link="data_only"/>
      <prefix original_prefix="user-upgrade-categories" class="Cake\UserUpgrades\Categories\Route_PrefixAdmin_UserUpgradeCategories" build_link="data_only"/>
    </route_type>
  </route_prefixes>
  <style_properties/>
  <templates>
    <template title="cake_account_upgrades.css" version_id="1000031" version_string="1.0.0 Alpha 2"><![CDATA[.upgradeSubForm
{
	clear: both;
}

.upgradeSubForm .button
{
	margin-bottom: 5px;
}]]></template>
  </templates>
  <public_template_modifications>
    <modification template="account_upgrades" modification_key="cake_userUpgrades_categories_accountUpgrades" description="" execution_order="10" enabled="1" action="preg_replace">
      <find><![CDATA[#<xen:if is="{\$available}">(.*)(<h3.*</h3>).*<xen:foreach loop="\$available" value="\$upgrade">(\s*<li.*)(<form action="{\$payPalUrl}" method="post" class="upgradeForm">.*</form>)(.*</li>\s*)</xen:foreach>\s*</ul>#Us]]></find>
      <replace><![CDATA[<xen:require css="cake_account_upgrades.css" />
<xen:if is="{$userUpgradeCategories}">
${1}
<xen:foreach loop="$userUpgradeCategories" key="$parentCategoryId" value="$parentCategory">
	<xen:if is="{$parentCategory.categories}">
		<xen:if hascontent="true">
			<xen:if is="{xen:count $userUpgradeCategories} > 1 || {$parentCategoryId}">
				<h3 class="heading">
					<xen:if is="{$parentCategoryId}">{$parentCategory.title}<xen:else />{xen:phrase cake_other_account_upgrades}</xen:if>
				</h3>
				<xen:if is="{$parentCategoryId} && {$parentCategory.description}">
					<div class="primaryContent description">{xen:raw $parentCategory.description}</div>
				</xen:if>
			<xen:else />
				${2}
			</xen:if>
			<xen:contentcheck>
			<xen:foreach loop="$parentCategory.categories" key="$categoryId" value="$category">
				<xen:if is="{$category.upgrades}">
					<xen:if is="{$categoryId}">
						<xen:if is="{$category.show_descriptions}">
							<h3 class="subHeading">
								<xen:if is="{$categoryId}">{$category.title}</xen:if>
							</h3>
							<xen:if is="{$category.description}">
								<div class="primaryContent description">{xen:raw $category.description}</div>
							</xen:if>
						<xen:else />
							<li class="primaryContent upgrade">
								<div class="upgradeForm">
						</xen:if>
					</xen:if>
					<xen:foreach loop="$category.upgrades" value="$upgrade">
<xen:if is="!{$categoryId} or {$category.show_descriptions}">
${3}
<div>
<xen:else />
<div class="upgradeSubForm">
</xen:if>
${4}
</div>
<xen:if is="!{$categoryId} or {$category.show_descriptions}">
${5}
</xen:if>
					</xen:foreach>
					<xen:if is="{$categoryId} and !{$category.show_descriptions}">
						</div>
						<div class="upgradeMain">
							<h4 class="title">{$category.title}</h4>
							<xen:if is="{$category.description}">
								<div class="description">{xen:raw $category.description}</div>
							</xen:if>
						</div>
						</li>
					</xen:if>
				</xen:if>
			</xen:foreach>
			</xen:contentcheck>
			</xen:if>
	</xen:if>
</xen:foreach>]]></replace>
    </modification>
  </public_template_modifications>
  <bb_code_media_sites/>
  <bb_codes/>
</addon>
